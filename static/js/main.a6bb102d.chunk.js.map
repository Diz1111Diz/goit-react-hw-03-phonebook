{"version":3,"sources":["helpers/findContact.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styles.js","Components/ContactItem/ContactItem.styles.js","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","helpers/filterContact.js","Components/ContactFilter/ContactFilter.styles.js","Components/ContactFilter/ContactFilter.jsx","helpers/storage.js","App.js","index.js"],"names":["findContact","contacts","contact","find","el","name","Form","styled","form","Lable","label","Input","input","Button","button","props","disabled","toast","configure","formInitialState","number","ContactForm","addNewContact","useState","setForm","inputHandler","e","target","value","replace","onSubmit","preventDefault","id","uuidv4","error","position","POSITION","TOP_CENTER","notify","htmlFor","type","onChange","autoFocus","List","ul","Item","li","Text","p","ContactItem","deleteContact","onClick","ContactList","length","map","key","filterContact","filter","toLowerCase","includes","ContactFilter","changeFilter","placeholder","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","setContacts","setFilter","warn","filteredContact","useEffect","arrContacts","storage","newState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6bb102d.chunk.js","sourcesContent":["const findContact = (contacts, contact) => {\r\n  return contacts.find((el) => el.name === contact.name);\r\n};\r\n\r\nexport default findContact;\r\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  width: 300px;\n  border: 2px solid black;\n  padding: 10px;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 20px;\n  margin: 0 0 5px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  width: 100px;\n  margin-top: 20px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.45);\n  :hover {\n    background-color: ${(props) =>\n      props.disabled === false ? \"#6495ed\" : \"#ff6666\"};\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v1 as uuidv4 } from \"uuid\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport findContact from \"../../helpers/findContact\";\nimport { Lable, Input, Button, Form } from \"./ContactForm.styles\";\ntoast.configure();\n\nconst formInitialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ addNewContact, contacts }) => {\n  const [form, setForm] = useState(formInitialState);\n\n  const notify = (name) =>\n    toast.error(`${name} is already in contacts`, {\n      position: toast.POSITION.TOP_CENTER,\n    });\n\n  const inputHandler = (e) => {\n    const name = e.target.name;\n    let value = \"\";\n    if (name === \"name\") {\n      value = e.target.value.replace(/[^A-zА-яЁё\\s]+/gi, \"\");\n    }\n    if (name === \"number\") {\n      value = e.target.value.replace(/[^\\d\\s,+,(,)]+/gi, \"\");\n    }\n\n    setForm({ ...form, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = form;\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    const findSimilarName = findContact(contacts, contact);\n    if (findSimilarName) {\n      notify(contact.name);\n      return;\n    }\n    addNewContact(contact);\n    setForm(formInitialState);\n  };\n\n  const { name, number } = form;\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Lable htmlFor=\"name\">\n        Name\n        <Input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={inputHandler}\n          autoFocus\n        />\n      </Lable>\n\n      <Lable htmlFor=\"number\">\n        Number\n        <Input\n          name=\"number\"\n          type=\"text\"\n          value={number}\n          onChange={inputHandler}\n        />\n      </Lable>\n\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  addNewContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n`;\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Text = styled.p`\n  padding-right: 20px;\n`;\nexport const Button = styled.button`\n  height: 20px;\n  width: 60px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.45);\n  :hover {\n    background-color: #6495ed;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item, Text, Button } from \"./ContactItem.styles\";\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  const { name, number } = contact;\n  return (\n    <Item>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button onClick={deleteContact}>Delete</Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List } from \"./ContactList.styles\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <List>\n        {contacts.map((contact) => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            deleteContact={() => deleteContact(contact.id)}\n          ></ContactItem>\n        ))}\n      </List>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","const filterContact = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\nexport default filterContact;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./ContactFilter.styles\";\n\nconst ContactFilter = ({ value, changeFilter }) => {\n  return (\n    <Input\n      placeholder=\"Search name\"\n      type=\"text\"\n      value={value}\n      onChange={changeFilter}\n    />\n  );\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\nexport default ContactFilter;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nconst get = (key) => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport default {\r\n  save,\r\n  get,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\n//Helpers\nimport filterContact from \"./helpers/filterContact\";\nimport ContactFilter from \"./Components/ContactFilter/ContactFilter\";\nimport storage from \"./helpers/storage\";\n//toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const notify = (warn) =>\n    toast.error(`Contact ${warn} is too short!`, {\n      position: toast.POSITION.TOP_CENTER,\n    });\n\n  const addNewContact = (contact) => {\n    if (contact.name.length > 2 && contact.number.length > 2) {\n      setContacts([...contacts, contact]);\n    } else if (contact.name.length <= 1) {\n      notify(\"name\");\n    } else if (contact.number.length <= 1) {\n      notify(\"number\");\n    }\n  };\n\n  const deleteContact = (id) => {\n    const newState = contacts.filter((contact) => contact.id !== id);\n    setContacts(newState);\n  };\n\n  const changeFilter = (e) => {\n    const name = e.target.value;\n    setFilter(name);\n  };\n  const filteredContact = filterContact(contacts, filter);\n\n  useEffect(() => {\n    const arrContacts = storage.get(\"contacts\");\n    if (!arrContacts) {\n      storage.save(\"contacts\", []);\n      return;\n    }\n    setContacts(arrContacts);\n  }, []);\n\n  useEffect(() => {\n    storage.save(\"contacts\", contacts);\n  }, [contacts]);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm addNewContact={addNewContact} contacts={contacts} />\n\n      <h2>Contacts</h2>\n      <ContactFilter value={filter} changeFilter={changeFilter} />\n      <ContactList contacts={filteredContact} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}