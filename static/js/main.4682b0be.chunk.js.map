{"version":3,"sources":["helpers/findContact.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styles.js","Components/ContactItem/ContactItem.styles.js","Components/ContactItem/ContactItem.jsx","Components/ContactList/ContactList.jsx","helpers/filterContact.js","Components/ContactFilter/ContactFilter.styles.js","Components/ContactFilter/ContactFilter.jsx","helpers/storage.js","App.js","index.js"],"names":["findContact","contacts","contact","find","el","name","Form","styled","form","Lable","label","Input","input","Button","button","props","disabled","formInitialState","number","ContactForm","addNewContact","useState","setForm","inputHandler","e","target","value","onSubmit","preventDefault","id","uuidv4","alert","htmlFor","type","onChange","autoFocus","length","List","ul","Item","li","Text","p","ContactItem","deleteContact","onClick","ContactList","map","key","filterContact","filter","toLowerCase","includes","ContactFilter","changeFilter","placeholder","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","setContacts","setFilter","filteredContact","useEffect","arrContacts","storage","newState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4682b0be.chunk.js","sourcesContent":["const findContact = (contacts, contact) => {\r\n  return contacts.find((el) => el.name === contact.name);\r\n};\r\n\r\nexport default findContact;\r\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  width: 300px;\n  border: 2px solid black;\n  padding: 10px;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 20px;\n  margin: 0 0 5px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 20px;\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  width: 100px;\n  margin-top: 20px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.45);\n  :hover {\n    background-color: ${(props) =>\n      props.disabled === false ? \"#6495ed\" : \"#ff6666\"};\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { v1 as uuidv4 } from \"uuid\";\nimport findContact from \"../../helpers/findContact\";\nimport { Lable, Input, Button, Form } from \"./ContactForm.styles\";\n\nconst formInitialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ addNewContact, contacts }) => {\n  const [form, setForm] = useState(formInitialState);\n\n  const inputHandler = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setForm({ ...form, [name]: value });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = form;\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    const findSimilarName = findContact(contacts, contact);\n    if (findSimilarName) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    addNewContact(contact);\n    setForm(formInitialState);\n  };\n\n  const { name, number } = form;\n\n  return (\n    <Form onSubmit={submitHandler}>\n      <Lable htmlFor=\"name\">\n        Name\n        <Input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={inputHandler}\n          autoFocus\n        />\n      </Lable>\n\n      <Lable htmlFor=\"number\">\n        Number\n        <Input\n          name=\"number\"\n          type=\"text\"\n          value={number}\n          onChange={inputHandler}\n        />\n      </Lable>\n\n      {name.length >= 1 && number >= 1 ? (\n        <Button type=\"submit\" disabled={false}>\n          Add contact\n        </Button>\n      ) : (\n        <Button type=\"submit\" disabled={true}>\n          Add contact\n        </Button>\n      )}\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n`;\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Text = styled.p`\n  padding-right: 20px;\n`;\nexport const Button = styled.button`\n  height: 20px;\n  width: 60px;\n  border-radius: 5px;\n  border: none;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.45);\n  :hover {\n    background-color: #6495ed;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item, Text, Button } from \"./ContactItem.styles\";\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  const { name, number } = contact;\n  return (\n    <Item>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button onClick={deleteContact}>Delete</Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { List } from \"./ContactList.styles\";\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <List>\n        {contacts.map((contact) => (\n          <ContactItem\n            key={contact.id}\n            contact={contact}\n            deleteContact={() => deleteContact(contact.id)}\n          ></ContactItem>\n        ))}\n      </List>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","const filterContact = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\nexport default filterContact;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input``;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./ContactFilter.styles\";\n\nconst ContactFilter = ({ value, changeFilter }) => {\n  return (\n    <Input\n      placeholder=\"Search name\"\n      type=\"text\"\n      value={value}\n      onChange={changeFilter}\n    />\n  );\n};\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\nexport default ContactFilter;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nconst get = (key) => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport default {\r\n  save,\r\n  get,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\n//Helpers\nimport filterContact from \"./helpers/filterContact\";\nimport ContactFilter from \"./Components/ContactFilter/ContactFilter\";\nimport storage from \"./helpers/storage\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = (contact) => {\n    setContacts([...contacts, contact]);\n  };\n\n  const deleteContact = (id) => {\n    const newState = contacts.filter((contact) => contact.id !== id);\n    setContacts(newState);\n  };\n\n  const changeFilter = (e) => {\n    const name = e.target.value;\n    setFilter(name);\n  };\n  const filteredContact = filterContact(contacts, filter);\n\n  useEffect(() => {\n    const arrContacts = storage.get(\"contacts\");\n    if (!arrContacts) {\n      storage.save(\"contacts\", []);\n      return;\n    }\n    setContacts(arrContacts);\n  }, []);\n\n  useEffect(() => {\n    storage.save(\"contacts\", contacts);\n  }, [contacts]);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm addNewContact={addNewContact} contacts={contacts} />\n\n      <h2>Contacts</h2>\n      <ContactFilter value={filter} changeFilter={changeFilter} />\n      <ContactList contacts={filteredContact} deleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}